---
- name: Create bootstrap token
  shell: "echo $(openssl rand -hex 3).$(openssl rand -hex 8)"
  register: bootstrap_token
- name: Copy kubeadm init config
  template:
    src: templates/init_kubelet.yaml.j2
    dest: /tmp/init_kubelet.yaml
- name: Initialize kubeadm
  command: kubeadm init --config=/tmp/init_kubelet.yaml --upload-certs
  when: groups['master'][0] == inventory_hostname
- name: Get kube admin config
  fetch:
    src: /etc/kubernetes/admin.conf
    dest: outputs
  when: groups['master'][0] == inventory_hostname
- name: Generate certificate key
  command: kubeadm init phase upload-certs --upload-certs
  register: cert_key
  when: groups['master'][0] == inventory_hostname
- name: Generate join command
  command: kubeadm token create --print-join-command
  register: join_command
  when: groups['master'][0] == inventory_hostname
- name: Join master node
  set_fact:
    join_command: "{{ join_command.stdout }} --control-plane --certificate-key {{ cert_key.stdout_lines[0] }}"
  when: groups['master'][0] == inventory_hostname
- name: debug
  debug:
    msg: "Join command: {{ join_command }}"
  when: groups['master'][0] == inventory_hostname
- name: Join Control Plane
  command: "{{ hostvars[groups['master'][0]]['join_command'] }}"
  when: groups['master'][0] != inventory_hostname